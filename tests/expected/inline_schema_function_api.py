# Generated by sql2py from inline_schema_function.sql
# DO NOT EDIT MANUALLY
from dataclasses import dataclass
from decimal import Decimal
from psycopg import AsyncConnection
from typing import List

@dataclass
class Product:
    product_id: int
    product_name: str
    price: Decimal

async def get_all_products(conn: AsyncConnection) -> List[Product]:
    """Function that returns rows from the products table
    Should use the schema defined above
    """
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_all_products()", [])
        rows = await cur.fetchall()
        # Ensure dataclass 'Product' is defined above.
        if not rows:
            return []
        colnames = [desc[0] for desc in cur.description]
        processed_rows = [
            dict(zip(colnames, r)) if not isinstance(r, dict) else r
            for r in rows
        ]
        return [Product(**row_dict) for row_dict in processed_rows]
