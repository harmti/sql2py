# -*- coding: utf-8 -*-

# Auto-generated by sql2pyapi from array_types_function.sql

from typing import List, Optional, Tuple, Dict, Any
from psycopg import AsyncConnection

async def get_item_ids(conn: AsyncConnection) -> Optional[List[int]]:
    """Returns an array of integers"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_item_ids()", [])
        row = await cur.fetchone()
        if row is None:
            return None
        if isinstance(row, dict):
            # Assumes the key is the function name for dict rows
            return row['get_item_ids']
        else:
            # Fallback for tuple-like rows (index 0)
            return row[0]

async def process_tags(conn: AsyncConnection, tags: List[str]) -> Optional[List[str]]:
    """Takes and returns an array of text"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM process_tags(%s)", [tags])
        row = await cur.fetchone()
        if row is None:
            return None
        if isinstance(row, dict):
            # Assumes the key is the function name for dict rows
            return row['process_tags']
        else:
            # Fallback for tuple-like rows (index 0)
            return row[0]
