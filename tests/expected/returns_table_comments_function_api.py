# -*- coding: utf-8 -*-

# Auto-generated by sql2pyapi from returns_table_comments_function.sql

from typing import List, Optional, Tuple, Dict, Any
from uuid import UUID
from psycopg import AsyncConnection
from dataclasses import dataclass

@dataclass
class FunctionWithReturnsTableCommentsResult:
    col_id: Optional[UUID]
    col_value: Optional[str]
    col_status: Optional[bool]

async def function_with_returns_table_comments(conn: AsyncConnection, filter: str) -> Optional[FunctionWithReturnsTableCommentsResult]:
    """Call PostgreSQL function function_with_returns_table_comments()."""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM function_with_returns_table_comments(%s)", [filter])
        row = await cur.fetchone()
        if row is None:
            return None
        # Ensure dataclass 'FunctionWithReturnsTableCommentsResult' is defined above.
        colnames = [desc[0] for desc in cur.description]
        row_dict = dict(zip(colnames, row)) if not isinstance(row, dict) else row
        # Check for 'empty' composite rows (all values are None)
        if all(value is None for value in row_dict.values()):
            return None
        return FunctionWithReturnsTableCommentsResult(**row_dict)
