# -*- coding: utf-8 -*-

# Auto-generated by sql2pyapi from returns_table_function.sql

from typing import List, Optional, Tuple, Dict, Any
from uuid import UUID
from psycopg import AsyncConnection
from dataclasses import dataclass

@dataclass
class GetUserBasicInfoResult:
    user_id: Optional[UUID]
    first_name: Optional[str]
    is_active: Optional[bool]

async def get_user_basic_info(conn: AsyncConnection, user_id: UUID) -> List[GetUserBasicInfoResult]:
    """Returns a user's basic info as a table"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_user_basic_info(%s)", [user_id])
        rows = await cur.fetchall()
        # Ensure dataclass 'GetUserBasicInfoResult' is defined above.
        if not rows:
            return []
        colnames = [desc[0] for desc in cur.description]
        processed_rows = [
            dict(zip(colnames, r)) if not isinstance(r, dict) else r
            for r in rows
        ]
        return [GetUserBasicInfoResult(**row_dict) for row_dict in processed_rows]
