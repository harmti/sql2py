# -*- coding: utf-8 -*-
# Auto-generated by sql2pyapi from returns_record_function.sql
#
# IMPORTANT: This code expects the database connection to use the default
# psycopg tuple row factory. It will raise errors if used with
# dictionary-based row factories (like DictRow).

from typing import List, Optional, Tuple, Dict, Any
from psycopg import AsyncConnection


async def get_processing_status(conn: AsyncConnection) -> Optional[Tuple]:
    """Returns an anonymous record containing status and count"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_processing_status()", [])
        row = await cur.fetchone()
        if row is None:
            return None
        # Return tuple for record type
        return row

async def get_all_statuses(conn: AsyncConnection) -> List[Tuple]:
    """Returns a setof anonymous records"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_all_statuses()", [])
        rows = await cur.fetchall()
        # Return list of tuples for SETOF record
        return rows
