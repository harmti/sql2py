# -*- coding: utf-8 -*-

# Auto-generated by sql2pyapi from table_col_comments.sql

from typing import List, Optional, Tuple, Dict, Any
from uuid import UUID
from datetime import date, datetime
from psycopg import AsyncConnection
from dataclasses import dataclass

@dataclass
class TableWithColComment:
    id: UUID
    name: str
    industry: Optional[str]
    size: Optional[str]
    notes: Optional[str]
    created_at: datetime

async def get_table_with_col_comments(conn: AsyncConnection) -> List[TableWithColComment]:
    """Function using the table (needed for test structure)"""
    async with conn.cursor() as cur:
        await cur.execute("SELECT * FROM get_table_with_col_comments()", [])
        rows = await cur.fetchall()
        # Ensure dataclass 'TableWithColComment' is defined above.
        if not rows:
            return []
        colnames = [desc[0] for desc in cur.description]
        processed_rows = [
            dict(zip(colnames, r)) if not isinstance(r, dict) else r
            for r in rows
        ]
        return [TableWithColComment(**row_dict) for row_dict in processed_rows]
